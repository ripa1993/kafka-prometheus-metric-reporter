version: '2.1'

services:
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
  kafka1:
    build: .
    hostname: kafka1
    ports:
      - "9092:9092"
      - "8080:8080"
      - "8081:8081"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_METRIC_REPORTERS: com.github.ripa1993.kafkaprometheusreporter.PrometheusReporter
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=8081:/usr/app/jmx-exporter-conf.yml
    volumes:
      - ./../target/scala-2.12/kafka-prometheus-reporter-assembly-0.1.jar:/usr/share/java/kafka/kafka-prometheus-reporter-assembly-0.1.jar
    depends_on:
      - zoo1